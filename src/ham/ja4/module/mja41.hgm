!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
subroutine MCalSaveHGMOrg()  
   double precision, allocatable :: H0GM(:) 
   
   integer(KIND=MPI_OFFSET_KIND) :: offset
   integer :: i, total, mystart, myend, mylen, realend
   integer :: fh, ftype, info
   double precision :: wtp1, wtp2, wtp3

   if (myid==rootID) then
       print *, 'mja41.hgm is used!'
       print *
   end if

   allocate(H0GM(jkNum*jkNum), stat=info)
   if (info/=0) then
       print *, ' Error in memory-alloc in MCalSaveHGMOrg at id=',myid
       return
   endif

   total = rNum;   ! ndvr(1)*ndvr(2)*ndvr(3)
   call getMPI1DIndex (total, nProc, myid, mystart, myend, mylen)
   print *,'id=',myid, ' range of index:',mystart, myend

   realEnd=myend
   if (mylen*nProc/=total) then
      if ((myid+1)*mylen/=myend) realEnd=myEnd+1
   endif

   call MPI_TYPE_Vector(jkNum*jkNum,1,total,MPI_DOUBLE_PRECISION,fType,ierr)
   call MPI_TYPE_COMMIT(fType, ierr)

   call MPI_File_Open(MPI_COMM_WORLD,fH0Gm,MPI_MODE_WRONLY+MPI_MODE_CREATE,&
                      MPI_INFO_NULL, fh, ierr) 
 
   if (myid==rootID) print *

   wtp1 = MPI_WTime()

   do i = mystart, myend
        call calHGMi(rIndex(1,i), rIndex(2,i), rIndex(3,i), H0GM)
        offset = (i-1)*dbSize
        call MPI_File_Set_View(fh, offset, MPI_DOUBLE_PRECISION, ftype, & 
                      'native', MPI_INFO_NULL, ierr) 
        call MPI_File_Write(fh, H0GM, jkNum**2,MPI_DOUBLE_PRECISION,    &
                       MPI_STATUS_IGNORE,ierr)
   end do

   wtp2 = MPI_WTime()
   !print *, 'Thread', myid,'is ready in',wtp2-wtp1

   if (realEnd/= myend) then
        offset = (myend-1)*dbSize
        call MPI_File_Set_View(fh, offset, MPI_DOUBLE_PRECISION, ftype, &
                      'native', MPI_INFO_NULL, ierr)
   end if 
 
   !print *

  call MPI_File_Close(fh, ierr)
  call MPI_TYPE_FREE(ftype,ierr)

  deallocate(H0Gm)

end subroutine
!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
subroutine MCalSaveHGMOrgSeq()
   double precision, allocatable :: H0GM(:)

   integer(KIND=MPI_OFFSET_KIND) :: offset
   integer :: i, total, mystart, myend, mylen
   integer :: fh, info

   allocate(H0GM(jkNum*jkNum), stat=info)
   if (info/=0) then
       print *, ' Error in memory_alloc in MCalSaveHGMOrgSeq at id=',myid
       return
   endif

   total = rNum;   ! ndvr(1)*ndvr(2)*ndvr(3)
   call getMPI1DIndex (total, nProc, myid, mystart, myend, mylen)
   print *,'id=',myid, ' range of index:',mystart, myend

   call MPI_File_Open(MPI_COMM_WORLD,fH0Gm,MPI_MODE_WRONLY+MPI_MODE_CREATE,&
                      MPI_INFO_NULL, fh, ierr)

   do i = mystart, myend
        call calHGMi(rIndex(1,i), rindex(2,i), rindex(3,i), H0GM)
        offset = (i-1)*dbSize*jkNum*jkNum
        
        call MPI_File_Write_At(fh, H0GM, jkNum**2,MPI_DOUBLE_PRECISION, &
                       MPI_STATUS_IGNORE,ierr)
   end do

  call MPI_File_Close(fh, ierr)
  deallocate(H0GM)

end subroutine
!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
subroutine MCalSaveHGMRe()  
   double precision, allocatable :: H0Gm(:) 
   
   integer(KIND=MPI_OFFSET_KIND) :: offset
   integer :: i, total, mystart, myend, mylen, realend
   integer :: fh, ftype, info
   double precision :: wtp1, wtp2, wtp3

   if (myid==rootID) then
       print *, 'mja41.hgm is used in compact mode!'
       print *
   end if

   allocate(H0GM(ndvr(4)*ndvr(4)), stat=info)
   if (info/=0) then
       print *, ' Error in allocating memory in MCalSaveHGMRe &
                  subroutine at id=',myid
       return
   endif

   total = rNum;  ! ndvr(1)*ndvr(2)*ndvr(3)

   call getMPI1DIndex (total, nproc, myid, mystart, myend, mylen)
   print *,'id=',myid, ' range of index:',mystart, myend

   realEnd=myend
   if (mylen*nProc/=total) then
      if ((myid+1)*mylen/=myend) realEnd=myEnd+1
   endif

   call MPI_TYPE_Vector(ndvr(4)*ndvr(4),1,total,MPI_DOUBLE_PRECISION,fType,ierr)
   call MPI_TYPE_COMMIT(fType, ierr)

   call MPI_File_Open(MPI_COMM_WORLD,fH0Gm,MPI_MODE_WRONLY+MPI_MODE_CREATE,&
                      MPI_INFO_NULL, fh, ierr) 
 
   if (myid==rootID) print *

   wtp1 = MPI_WTime()

   do i = mystart, myend
        call calHGMiCon(rIndex(1,i), rIndex(2,i), rIndex(3,i), ndvr(4), ReVmat, H0GM)
        offset = (i-1)*dbSize
        call MPI_File_Set_View(fh, offset, MPI_DOUBLE_PRECISION, ftype, & 
                      'native', MPI_INFO_NULL, ierr) 
        call MPI_File_Write(fh, H0GM, ndvr(4)**2, MPI_DOUBLE_PRECISION, &
                       MPI_STATUS_IGNORE,ierr)
   end do

   wtp2 = MPI_WTime()
   !print *, 'Thread', myid,'is ready in',wtp2-wtp1

   if (realEnd/= myend) then
        offset = (myend-1)*dbSize
        call MPI_File_Set_View(fh, offset, MPI_DOUBLE_PRECISION, ftype, &
                      'native', MPI_INFO_NULL, ierr)
   end if 

   !print *
  
  call MPI_File_Close(fh, ierr)
  call MPI_TYPE_FREE(ftype,ierr)

  deallocate(H0Gm)

end subroutine
!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
subroutine MCalSaveHGMReSeq()    
   double precision, allocatable :: H0Gm(:)

   integer(KIND=MPI_OFFSET_KIND) :: offset
   integer :: i, total, mystart, myend, mylen
   integer :: fh, info

   allocate(H0GM(ndvr(4)*ndvr(4)), stat=info)
   if (info/=0) then
       print *, ' Error in memory_alloc in MCalSaveHGMSeq id=',myid
       return
   endif

   total = rNum;    !ndvr(1)*ndvr(2)*ndvr(3)
   call getMPI1DIndex (total, nproc, myid, mystart, myend, mylen)
   print *,'id=',myid, ' range of index:',mystart, myend

   call MPI_File_Open(MPI_COMM_WORLD,fH0Gm,MPI_MODE_WRONLY+MPI_MODE_CREATE,&
                      MPI_INFO_NULL, fh, ierr)

   do i = mystart, myend
        call calHGMiCon(rIndex(1,i), rIndex(2,i), rIndex(3,i), ndvr(4), ReVmat, H0GM)
        offset = (i-1)*dbSize*nDvr(4)*nDVR(4)
        call MPI_File_Write_At(fh,offset,H0GM,ndvr(4)**2,MPI_DOUBLE_PRECISION,&
                       MPI_STATUS_IGNORE,ierr)
   end do

  call MPI_File_Close(fh, ierr)
 
  deallocate(H0Gm)

end subroutine
!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

