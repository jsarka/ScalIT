!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
!c                 Calculate H0 elements                             c
!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
!*********************************************************************
logical function calHlr1()
    integer, parameter :: ind = 1
    external :: fitVlr1
    
    if (fixR1) then
       calHlr1=.true.; Hlr1(1,1)=0.0D0;
       lr1(1)=Re(ind); vlr1(1)=0.0D0; Elr1(1)=0.0D0
       momlr1(1) = 0.50D0/(mass(ind)*Re(ind)*Re(ind))  
    else
       if (useSP) then               
          calHlr1=calH0(fVRlr1,nDVR(ind),mass(ind),calVlr1,lr1,vlr1, &
                        momlr1, Elr1, Hlr1)       
       else
          calHlr1=calH0(fVRlr1,nDVR(ind),mass(ind),fitVlr1,lr1,vlr1, &
                        momlr1, Elr1, Hlr1)
       end if
    end if
end function

!********************************************************************
logical function calHlr2()
    integer, parameter :: ind = 2
    external :: fitVlr2  

    if (fixR2) then
       calHlr2=.true.; Hlr2(1,1)=0.0D0;
       lr2(1)=Re(ind); vlr2(1)=0.0D0; Elr2(1)=0.0D0
       momlr2(1) = 0.50D0/(mass(ind)*Re(ind)*Re(ind))  
    else
       if (useSP) then
          calHlr2=calH0(fVRlr2,nDVR(ind),mass(ind),calVlr2,lr2,vlr2, &
                        momlr2, Elr2, Hlr2)
       else
          calHlr2=calH0(fVRlr2,nDVR(ind),mass(ind),fitVlr2,lr2,vlr2, &
                        momlr2, Elr2, Hlr2)
       end if
    end if
end function

!********************************************************************
logical function calHBR()
    integer, parameter :: ind = 3
    external :: fitVBR

    if (fixBR) then
       calHBR=.true.; HBR(1,1)=0.0D0
       BR(1)=Re(ind); vBR(1)=0.0D0; EBR(1)=0.0D0
       momBR(1) = 0.50D0/(mass(ind)*Re(ind)*Re(ind))  
    else
       if (useSP) then
          calHBR=calH0(fVRBR,nDVR(ind),mass(ind),calVBR,BR,vBR, &
                        momBR, EBR, HBR)
       else
          calHBR=calH0(fVRBR,nDVR(ind),mass(ind),fitVBR,BR,vBR, &
                        momBR, EBR, HBR)
       end if
    end if
end function

!***************************************************************

!ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
logical function calH0(fileName, N, ma, fitV, R0, VR0, mR0, ER0, HR0)
    character(len=*), intent(IN) :: filename
    integer, intent(IN)          :: N
    double precision,intent(IN)  :: ma
    external :: fitV
    double precision,intent(OUT) :: R0(N),VR0(N),mR0(N),ER0(N),HR0(N,N)

    logical :: getDVRRF_Sinc2

    if ( getDVRRF_Sinc2(N, R0, ER0, HR0, filename)) then
        call fitV(N,R0,VR0)
        mR0(1:N) = 0.50D0/(ma*R0(1:N)*R0(1:N))
        calH0 = .true.
    else
        calH0 = .false.
    end if

end function
!cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc


